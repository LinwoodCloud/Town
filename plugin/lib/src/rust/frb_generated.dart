// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.7.1.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/luau.dart';
import 'api/simple.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'frb_generated.io.dart'
    if (dart.library.js_interop) 'frb_generated.web.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

/// Main entrypoint of the Rust API
class RustLib extends BaseEntrypoint<RustLibApi, RustLibApiImpl, RustLibWire> {
  @internal
  static final instance = RustLib._();

  RustLib._();

  /// Initialize flutter_rust_bridge
  static Future<void> init({
    RustLibApi? api,
    BaseHandler? handler,
    ExternalLibrary? externalLibrary,
  }) async {
    await instance.initImpl(
      api: api,
      handler: handler,
      externalLibrary: externalLibrary,
    );
  }

  /// Initialize flutter_rust_bridge in mock mode.
  /// No libraries for FFI are loaded.
  static void initMock({
    required RustLibApi api,
  }) {
    instance.initMockImpl(
      api: api,
    );
  }

  /// Dispose flutter_rust_bridge
  ///
  /// The call to this function is optional, since flutter_rust_bridge (and everything else)
  /// is automatically disposed when the app stops.
  static void dispose() => instance.disposeImpl();

  @override
  ApiImplConstructor<RustLibApiImpl, RustLibWire> get apiImplConstructor =>
      RustLibApiImpl.new;

  @override
  WireConstructor<RustLibWire> get wireConstructor =>
      RustLibWire.fromExternalLibrary;

  @override
  Future<void> executeRustInitializers() async {}

  @override
  ExternalLibraryLoaderConfig get defaultExternalLibraryLoaderConfig =>
      kDefaultExternalLibraryLoaderConfig;

  @override
  String get codegenVersion => '2.7.1';

  @override
  int get rustContentHash => 1001445239;

  static const kDefaultExternalLibraryLoaderConfig =
      ExternalLibraryLoaderConfig(
    stem: 'setonix_plugin',
    ioDirectory: 'rust/target/release/',
    webPrefix: 'pkg/',
  );
}

abstract class RustLibApi extends BaseApi {
  bool crateApiLuauEventDetailsAutoAccessorGetCancelled(
      {required EventDetails that});

  Set<int>? crateApiLuauEventDetailsAutoAccessorGetNeedsUpdate(
      {required EventDetails that});

  MapStringValue crateApiLuauEventDetailsAutoAccessorGetServerEvent(
      {required EventDetails that});

  int crateApiLuauEventDetailsAutoAccessorGetSource(
      {required EventDetails that});

  int crateApiLuauEventDetailsAutoAccessorGetTarget(
      {required EventDetails that});

  void crateApiLuauEventDetailsAutoAccessorSetCancelled(
      {required EventDetails that, required bool cancelled});

  void crateApiLuauEventDetailsAutoAccessorSetNeedsUpdate(
      {required EventDetails that, Set<int>? needsUpdate});

  void crateApiLuauEventDetailsAutoAccessorSetServerEvent(
      {required EventDetails that, required MapStringValue serverEvent});

  void crateApiLuauEventDetailsAutoAccessorSetSource(
      {required EventDetails that, required int source});

  void crateApiLuauEventDetailsAutoAccessorSetTarget(
      {required EventDetails that, required int target});

  Future<void> crateApiLuauEventDetailsCancel({required EventDetails that});

  Future<EventDetails> crateApiLuauEventDetailsNew(
      {required MapStringValue serverEvent,
      required int target,
      required int source,
      Set<int>? needsUpdate});

  Future<EventDetails>
      crateApiLuauLifetimeableAutoOwnedRustOpaqueFlutterRustBridgeforGeneratedRustAutoOpaqueInnerLuauEventRunnerstaticRunEvent(
          {required LuauEventRunner that,
          required String eventType,
          required String event,
          required String serverEvent,
          required int target});

  Future<void>
      crateApiLuauLifetimeableAutoOwnedRustOpaqueFlutterRustBridgeforGeneratedRustAutoOpaqueInnerLuauEventRunnerstaticRunJoin(
          {required LuauEventRunner that, required String name});

  Future<LuauEventSystem> crateApiLuauLuauEventSystemDefault();

  LuauEventRunner crateApiLuauLuauPluginEventSystem({required LuauPlugin that});

  LuauPlugin crateApiLuauLuauPluginNew(
      {required String code, required PluginCallback callback});

  Future<void> crateApiLuauLuauPluginRun({required LuauPlugin that});

  Future<void> crateApiLuauPluginCallbackChangeOnPrint(
      {required PluginCallback that,
      required FutureOr<void> Function(String) onPrint});

  Future<PluginCallback> crateApiLuauPluginCallbackDefault();

  Future<int> crateApiSimpleSimpleAdderTwinNormal(
      {required int a, required int b});

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_EventDetails;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_EventDetails;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_EventDetailsPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_LuauEventRunner;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_LuauEventRunner;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_LuauEventRunnerPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_LuauEventSystem;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_LuauEventSystem;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_LuauEventSystemPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_LuauPlugin;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_LuauPlugin;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_LuauPluginPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_MapStringValue;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_MapStringValue;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MapStringValuePtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_PluginCallback;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_PluginCallback;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_PluginCallbackPtr;
}

class RustLibApiImpl extends RustLibApiImplPlatform implements RustLibApi {
  RustLibApiImpl({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @override
  bool crateApiLuauEventDetailsAutoAccessorGetCancelled(
      {required EventDetails that}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
            that, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 1)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_bool,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauEventDetailsAutoAccessorGetCancelledConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta
      get kCrateApiLuauEventDetailsAutoAccessorGetCancelledConstMeta =>
          const TaskConstMeta(
            debugName: "EventDetails_auto_accessor_get_cancelled",
            argNames: ["that"],
          );

  @override
  Set<int>? crateApiLuauEventDetailsAutoAccessorGetNeedsUpdate(
      {required EventDetails that}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
            that, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 2)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_opt_Set_i_16,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauEventDetailsAutoAccessorGetNeedsUpdateConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta
      get kCrateApiLuauEventDetailsAutoAccessorGetNeedsUpdateConstMeta =>
          const TaskConstMeta(
            debugName: "EventDetails_auto_accessor_get_needs_update",
            argNames: ["that"],
          );

  @override
  MapStringValue crateApiLuauEventDetailsAutoAccessorGetServerEvent(
      {required EventDetails that}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
            that, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 3)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMapStringValue,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauEventDetailsAutoAccessorGetServerEventConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta
      get kCrateApiLuauEventDetailsAutoAccessorGetServerEventConstMeta =>
          const TaskConstMeta(
            debugName: "EventDetails_auto_accessor_get_server_event",
            argNames: ["that"],
          );

  @override
  int crateApiLuauEventDetailsAutoAccessorGetSource(
      {required EventDetails that}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
            that, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 4)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_i_16,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauEventDetailsAutoAccessorGetSourceConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiLuauEventDetailsAutoAccessorGetSourceConstMeta =>
      const TaskConstMeta(
        debugName: "EventDetails_auto_accessor_get_source",
        argNames: ["that"],
      );

  @override
  int crateApiLuauEventDetailsAutoAccessorGetTarget(
      {required EventDetails that}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
            that, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 5)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_i_16,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauEventDetailsAutoAccessorGetTargetConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiLuauEventDetailsAutoAccessorGetTargetConstMeta =>
      const TaskConstMeta(
        debugName: "EventDetails_auto_accessor_get_target",
        argNames: ["that"],
      );

  @override
  void crateApiLuauEventDetailsAutoAccessorSetCancelled(
      {required EventDetails that, required bool cancelled}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
            that, serializer);
        sse_encode_bool(cancelled, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 6)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauEventDetailsAutoAccessorSetCancelledConstMeta,
      argValues: [that, cancelled],
      apiImpl: this,
    ));
  }

  TaskConstMeta
      get kCrateApiLuauEventDetailsAutoAccessorSetCancelledConstMeta =>
          const TaskConstMeta(
            debugName: "EventDetails_auto_accessor_set_cancelled",
            argNames: ["that", "cancelled"],
          );

  @override
  void crateApiLuauEventDetailsAutoAccessorSetNeedsUpdate(
      {required EventDetails that, Set<int>? needsUpdate}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
            that, serializer);
        sse_encode_opt_Set_i_16(needsUpdate, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 7)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauEventDetailsAutoAccessorSetNeedsUpdateConstMeta,
      argValues: [that, needsUpdate],
      apiImpl: this,
    ));
  }

  TaskConstMeta
      get kCrateApiLuauEventDetailsAutoAccessorSetNeedsUpdateConstMeta =>
          const TaskConstMeta(
            debugName: "EventDetails_auto_accessor_set_needs_update",
            argNames: ["that", "needsUpdate"],
          );

  @override
  void crateApiLuauEventDetailsAutoAccessorSetServerEvent(
      {required EventDetails that, required MapStringValue serverEvent}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
            that, serializer);
        sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMapStringValue(
            serverEvent, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 8)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauEventDetailsAutoAccessorSetServerEventConstMeta,
      argValues: [that, serverEvent],
      apiImpl: this,
    ));
  }

  TaskConstMeta
      get kCrateApiLuauEventDetailsAutoAccessorSetServerEventConstMeta =>
          const TaskConstMeta(
            debugName: "EventDetails_auto_accessor_set_server_event",
            argNames: ["that", "serverEvent"],
          );

  @override
  void crateApiLuauEventDetailsAutoAccessorSetSource(
      {required EventDetails that, required int source}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
            that, serializer);
        sse_encode_i_16(source, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 9)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauEventDetailsAutoAccessorSetSourceConstMeta,
      argValues: [that, source],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiLuauEventDetailsAutoAccessorSetSourceConstMeta =>
      const TaskConstMeta(
        debugName: "EventDetails_auto_accessor_set_source",
        argNames: ["that", "source"],
      );

  @override
  void crateApiLuauEventDetailsAutoAccessorSetTarget(
      {required EventDetails that, required int target}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
            that, serializer);
        sse_encode_i_16(target, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 10)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauEventDetailsAutoAccessorSetTargetConstMeta,
      argValues: [that, target],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiLuauEventDetailsAutoAccessorSetTargetConstMeta =>
      const TaskConstMeta(
        debugName: "EventDetails_auto_accessor_set_target",
        argNames: ["that", "target"],
      );

  @override
  Future<void> crateApiLuauEventDetailsCancel({required EventDetails that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
            that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 11, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauEventDetailsCancelConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiLuauEventDetailsCancelConstMeta =>
      const TaskConstMeta(
        debugName: "EventDetails_cancel",
        argNames: ["that"],
      );

  @override
  Future<EventDetails> crateApiLuauEventDetailsNew(
      {required MapStringValue serverEvent,
      required int target,
      required int source,
      Set<int>? needsUpdate}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMapStringValue(
            serverEvent, serializer);
        sse_encode_i_16(target, serializer);
        sse_encode_i_16(source, serializer);
        sse_encode_opt_Set_i_16(needsUpdate, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 12, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauEventDetailsNewConstMeta,
      argValues: [serverEvent, target, source, needsUpdate],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiLuauEventDetailsNewConstMeta =>
      const TaskConstMeta(
        debugName: "EventDetails_new",
        argNames: ["serverEvent", "target", "source", "needsUpdate"],
      );

  @override
  Future<EventDetails>
      crateApiLuauLifetimeableAutoOwnedRustOpaqueFlutterRustBridgeforGeneratedRustAutoOpaqueInnerLuauEventRunnerstaticRunEvent(
          {required LuauEventRunner that,
          required String eventType,
          required String event,
          required String serverEvent,
          required int target}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Lifetimeable_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventRunnerstatic(
            that, serializer);
        sse_encode_String(eventType, serializer);
        sse_encode_String(event, serializer);
        sse_encode_String(serverEvent, serializer);
        sse_encode_i_16(target, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 13, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails,
        decodeErrorData: null,
      ),
      constMeta:
          kCrateApiLuauLifetimeableAutoOwnedRustOpaqueFlutterRustBridgeforGeneratedRustAutoOpaqueInnerLuauEventRunnerstaticRunEventConstMeta,
      argValues: [that, eventType, event, serverEvent, target],
      apiImpl: this,
    ));
  }

  TaskConstMeta
      get kCrateApiLuauLifetimeableAutoOwnedRustOpaqueFlutterRustBridgeforGeneratedRustAutoOpaqueInnerLuauEventRunnerstaticRunEventConstMeta =>
          const TaskConstMeta(
            debugName:
                "Lifetimeable_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventRunnerstatic_run_event",
            argNames: ["that", "eventType", "event", "serverEvent", "target"],
          );

  @override
  Future<void>
      crateApiLuauLifetimeableAutoOwnedRustOpaqueFlutterRustBridgeforGeneratedRustAutoOpaqueInnerLuauEventRunnerstaticRunJoin(
          {required LuauEventRunner that, required String name}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Lifetimeable_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventRunnerstatic(
            that, serializer);
        sse_encode_String(name, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 14, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta:
          kCrateApiLuauLifetimeableAutoOwnedRustOpaqueFlutterRustBridgeforGeneratedRustAutoOpaqueInnerLuauEventRunnerstaticRunJoinConstMeta,
      argValues: [that, name],
      apiImpl: this,
    ));
  }

  TaskConstMeta
      get kCrateApiLuauLifetimeableAutoOwnedRustOpaqueFlutterRustBridgeforGeneratedRustAutoOpaqueInnerLuauEventRunnerstaticRunJoinConstMeta =>
          const TaskConstMeta(
            debugName:
                "Lifetimeable_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventRunnerstatic_run_join",
            argNames: ["that", "name"],
          );

  @override
  Future<LuauEventSystem> crateApiLuauLuauEventSystemDefault() {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 15, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventSystem,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauLuauEventSystemDefaultConstMeta,
      argValues: [],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiLuauLuauEventSystemDefaultConstMeta =>
      const TaskConstMeta(
        debugName: "LuauEventSystem_default",
        argNames: [],
      );

  @override
  LuauEventRunner crateApiLuauLuauPluginEventSystem(
      {required LuauPlugin that}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauPlugin(
            that, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 16)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Lifetimeable_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventRunnerstatic,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauLuauPluginEventSystemConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiLuauLuauPluginEventSystemConstMeta =>
      const TaskConstMeta(
        debugName: "LuauPlugin_event_system",
        argNames: ["that"],
      );

  @override
  LuauPlugin crateApiLuauLuauPluginNew(
      {required String code, required PluginCallback callback}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_String(code, serializer);
        sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPluginCallback(
            callback, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 17)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauPlugin,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauLuauPluginNewConstMeta,
      argValues: [code, callback],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiLuauLuauPluginNewConstMeta => const TaskConstMeta(
        debugName: "LuauPlugin_new",
        argNames: ["code", "callback"],
      );

  @override
  Future<void> crateApiLuauLuauPluginRun({required LuauPlugin that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauPlugin(
            that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 18, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kCrateApiLuauLuauPluginRunConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiLuauLuauPluginRunConstMeta => const TaskConstMeta(
        debugName: "LuauPlugin_run",
        argNames: ["that"],
      );

  @override
  Future<void> crateApiLuauPluginCallbackChangeOnPrint(
      {required PluginCallback that,
      required FutureOr<void> Function(String) onPrint}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPluginCallback(
            that, serializer);
        sse_encode_DartFn_Inputs_String_Output_unit_AnyhowException(
            onPrint, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 19, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauPluginCallbackChangeOnPrintConstMeta,
      argValues: [that, onPrint],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiLuauPluginCallbackChangeOnPrintConstMeta =>
      const TaskConstMeta(
        debugName: "PluginCallback_change_on_print",
        argNames: ["that", "onPrint"],
      );

  @override
  Future<PluginCallback> crateApiLuauPluginCallbackDefault() {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 20, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPluginCallback,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiLuauPluginCallbackDefaultConstMeta,
      argValues: [],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiLuauPluginCallbackDefaultConstMeta =>
      const TaskConstMeta(
        debugName: "PluginCallback_default",
        argNames: [],
      );

  @override
  Future<int> crateApiSimpleSimpleAdderTwinNormal(
      {required int a, required int b}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_i_32(a, serializer);
        sse_encode_i_32(b, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 21, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_i_32,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiSimpleSimpleAdderTwinNormalConstMeta,
      argValues: [a, b],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiSimpleSimpleAdderTwinNormalConstMeta =>
      const TaskConstMeta(
        debugName: "simple_adder_twin_normal",
        argNames: ["a", "b"],
      );

  Future<void> Function(int, dynamic)
      encode_DartFn_Inputs_String_Output_unit_AnyhowException(
          FutureOr<void> Function(String) raw) {
    return (callId, rawArg0) async {
      final arg0 = dco_decode_String(rawArg0);

      Box<void>? rawOutput;
      Box<AnyhowException>? rawError;
      try {
        rawOutput = Box(await raw(arg0));
      } catch (e, s) {
        rawError = Box(AnyhowException("$e\n\n$s"));
      }

      final serializer = SseSerializer(generalizedFrbRustBinding);
      assert((rawOutput != null) ^ (rawError != null));
      if (rawOutput != null) {
        serializer.buffer.putUint8(0);
        sse_encode_unit(rawOutput.value, serializer);
      } else {
        serializer.buffer.putUint8(1);
        sse_encode_AnyhowException(rawError!.value, serializer);
      }
      final output = serializer.intoRaw();

      generalizedFrbRustBinding.dartFnDeliverOutput(
          callId: callId,
          ptr: output.ptr,
          rustVecLen: output.rustVecLen,
          dataLen: output.dataLen);
    };
  }

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_EventDetails => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_EventDetails => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_LuauEventRunner => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLifetimeableLuauEventRunnerstatic;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_LuauEventRunner => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLifetimeableLuauEventRunnerstatic;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_LuauEventSystem => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventSystem;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_LuauEventSystem => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventSystem;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_LuauPlugin => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauPlugin;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_LuauPlugin => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauPlugin;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_MapStringValue => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMapStringValue;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_MapStringValue => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMapStringValue;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_PluginCallback => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPluginCallback;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_PluginCallback => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPluginCallback;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AnyhowException(raw as String);
  }

  @protected
  LuauEventRunner
      dco_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLifetimeableLuauEventRunnerstatic(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLifetimeableLuauEventRunnerstatic(
        raw);
  }

  @protected
  EventDetails
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return EventDetailsImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  LuauEventSystem
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventSystem(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return LuauEventSystemImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  LuauPlugin
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauPlugin(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return LuauPluginImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  MapStringValue
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMapStringValue(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return MapStringValueImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  PluginCallback
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPluginCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PluginCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  EventDetails
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return EventDetailsImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  PluginCallback
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPluginCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PluginCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  EventDetails
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return EventDetailsImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  LuauPlugin
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauPlugin(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return LuauPluginImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  FutureOr<void> Function(String)
      dco_decode_DartFn_Inputs_String_Output_unit_AnyhowException(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError('');
  }

  @protected
  Object dco_decode_DartOpaque(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return decodeDartOpaque(raw, generalizedFrbRustBinding);
  }

  @protected
  LuauEventRunner
      dco_decode_Lifetimeable_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventRunnerstatic(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError(
        'Not implemented in this codec, please use the other one');
  }

  @protected
  EventDetails
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return EventDetailsImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  LuauEventRunner
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLifetimeableLuauEventRunnerstatic(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return LuauEventRunnerImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  LuauEventSystem
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventSystem(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return LuauEventSystemImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  LuauPlugin
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauPlugin(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return LuauPluginImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  MapStringValue
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMapStringValue(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return MapStringValueImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  PluginCallback
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPluginCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PluginCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Set<int> dco_decode_Set_i_16(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return Set.from(dco_decode_list_prim_i_16_strict(raw));
  }

  @protected
  String dco_decode_String(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as String;
  }

  @protected
  bool dco_decode_bool(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as bool;
  }

  @protected
  int dco_decode_i_16(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as int;
  }

  @protected
  int dco_decode_i_32(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as int;
  }

  @protected
  PlatformInt64 dco_decode_isize(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dcoDecodeI64(raw);
  }

  @protected
  Int16List dco_decode_list_prim_i_16_strict(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as Int16List;
  }

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as Uint8List;
  }

  @protected
  Set<int>? dco_decode_opt_Set_i_16(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_Set_i_16(raw);
  }

  @protected
  int dco_decode_u_8(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as int;
  }

  @protected
  void dco_decode_unit(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return;
  }

  @protected
  BigInt dco_decode_usize(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dcoDecodeU64(raw);
  }

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_String(deserializer);
    return AnyhowException(inner);
  }

  @protected
  LuauEventRunner
      sse_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLifetimeableLuauEventRunnerstatic(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner =
        sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLifetimeableLuauEventRunnerstatic(
            deserializer);
    return inner;
  }

  @protected
  EventDetails
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return EventDetailsImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  LuauEventSystem
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventSystem(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return LuauEventSystemImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  LuauPlugin
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauPlugin(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return LuauPluginImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  MapStringValue
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMapStringValue(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return MapStringValueImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  PluginCallback
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPluginCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PluginCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  EventDetails
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return EventDetailsImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  PluginCallback
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPluginCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PluginCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  EventDetails
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return EventDetailsImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  LuauPlugin
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauPlugin(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return LuauPluginImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Object sse_decode_DartOpaque(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_isize(deserializer);
    return decodeDartOpaque(inner, generalizedFrbRustBinding);
  }

  @protected
  LuauEventRunner
      sse_decode_Lifetimeable_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventRunnerstatic(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner =
        sse_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLifetimeableLuauEventRunnerstatic(
            deserializer);
    return inner;
  }

  @protected
  EventDetails
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return EventDetailsImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  LuauEventRunner
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLifetimeableLuauEventRunnerstatic(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return LuauEventRunnerImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  LuauEventSystem
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventSystem(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return LuauEventSystemImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  LuauPlugin
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauPlugin(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return LuauPluginImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  MapStringValue
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMapStringValue(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return MapStringValueImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  PluginCallback
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPluginCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PluginCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Set<int> sse_decode_Set_i_16(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_list_prim_i_16_strict(deserializer);
    return Set.from(inner);
  }

  @protected
  String sse_decode_String(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_list_prim_u_8_strict(deserializer);
    return utf8.decoder.convert(inner);
  }

  @protected
  bool sse_decode_bool(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getUint8() != 0;
  }

  @protected
  int sse_decode_i_16(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getInt16();
  }

  @protected
  int sse_decode_i_32(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getInt32();
  }

  @protected
  PlatformInt64 sse_decode_isize(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getPlatformInt64();
  }

  @protected
  Int16List sse_decode_list_prim_i_16_strict(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var len_ = sse_decode_i_32(deserializer);
    return deserializer.buffer.getInt16List(len_);
  }

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var len_ = sse_decode_i_32(deserializer);
    return deserializer.buffer.getUint8List(len_);
  }

  @protected
  Set<int>? sse_decode_opt_Set_i_16(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_Set_i_16(deserializer));
    } else {
      return null;
    }
  }

  @protected
  int sse_decode_u_8(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getUint8();
  }

  @protected
  void sse_decode_unit(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
  }

  @protected
  BigInt sse_decode_usize(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getBigUint64();
  }

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.message, serializer);
  }

  @protected
  void
      sse_encode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLifetimeableLuauEventRunnerstatic(
          LuauEventRunner self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLifetimeableLuauEventRunnerstatic(
        self, serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
          EventDetails self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as EventDetailsImpl).frbInternalSseEncode(move: true),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventSystem(
          LuauEventSystem self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as LuauEventSystemImpl).frbInternalSseEncode(move: true),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauPlugin(
          LuauPlugin self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as LuauPluginImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMapStringValue(
          MapStringValue self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as MapStringValueImpl).frbInternalSseEncode(move: true),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPluginCallback(
          PluginCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as PluginCallbackImpl).frbInternalSseEncode(move: true),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
          EventDetails self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as EventDetailsImpl).frbInternalSseEncode(move: false),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPluginCallback(
          PluginCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as PluginCallbackImpl).frbInternalSseEncode(move: false),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
          EventDetails self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as EventDetailsImpl).frbInternalSseEncode(move: false),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauPlugin(
          LuauPlugin self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as LuauPluginImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void sse_encode_DartFn_Inputs_String_Output_unit_AnyhowException(
      FutureOr<void> Function(String) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_DartOpaque(
        encode_DartFn_Inputs_String_Output_unit_AnyhowException(self),
        serializer);
  }

  @protected
  void sse_encode_DartOpaque(Object self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_isize(
        PlatformPointerUtil.ptrToPlatformInt64(encodeDartOpaque(
            self, portManager.dartHandlerPort, generalizedFrbRustBinding)),
        serializer);
  }

  @protected
  void
      sse_encode_Lifetimeable_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventRunnerstatic(
          LuauEventRunner self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLifetimeableLuauEventRunnerstatic(
        self, serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventDetails(
          EventDetails self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as EventDetailsImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLifetimeableLuauEventRunnerstatic(
          LuauEventRunner self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as LuauEventRunnerImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauEventSystem(
          LuauEventSystem self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as LuauEventSystemImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLuauPlugin(
          LuauPlugin self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as LuauPluginImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMapStringValue(
          MapStringValue self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as MapStringValueImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPluginCallback(
          PluginCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as PluginCallbackImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void sse_encode_Set_i_16(Set<int> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_prim_i_16_strict(
        Int16List.fromList(self.toList()), serializer);
  }

  @protected
  void sse_encode_String(String self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_prim_u_8_strict(utf8.encoder.convert(self), serializer);
  }

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putUint8(self ? 1 : 0);
  }

  @protected
  void sse_encode_i_16(int self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putInt16(self);
  }

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putInt32(self);
  }

  @protected
  void sse_encode_isize(PlatformInt64 self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putPlatformInt64(self);
  }

  @protected
  void sse_encode_list_prim_i_16_strict(
      Int16List self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    serializer.buffer.putInt16List(self);
  }

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    serializer.buffer.putUint8List(self);
  }

  @protected
  void sse_encode_opt_Set_i_16(Set<int>? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_Set_i_16(self, serializer);
    }
  }

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putUint8(self);
  }

  @protected
  void sse_encode_unit(void self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
  }

  @protected
  void sse_encode_usize(BigInt self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putBigUint64(self);
  }
}

@sealed
class EventDetailsImpl extends RustOpaque implements EventDetails {
  // Not to be used by end users
  EventDetailsImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  EventDetailsImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_EventDetails,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_EventDetails,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_EventDetailsPtr,
  );

  bool get cancelled =>
      RustLib.instance.api.crateApiLuauEventDetailsAutoAccessorGetCancelled(
        that: this,
      );

  Set<int>? get needsUpdate =>
      RustLib.instance.api.crateApiLuauEventDetailsAutoAccessorGetNeedsUpdate(
        that: this,
      );

  MapStringValue get serverEvent =>
      RustLib.instance.api.crateApiLuauEventDetailsAutoAccessorGetServerEvent(
        that: this,
      );

  int get source =>
      RustLib.instance.api.crateApiLuauEventDetailsAutoAccessorGetSource(
        that: this,
      );

  int get target =>
      RustLib.instance.api.crateApiLuauEventDetailsAutoAccessorGetTarget(
        that: this,
      );

  set cancelled(bool cancelled) =>
      RustLib.instance.api.crateApiLuauEventDetailsAutoAccessorSetCancelled(
          that: this, cancelled: cancelled);

  set needsUpdate(Set<int>? needsUpdate) =>
      RustLib.instance.api.crateApiLuauEventDetailsAutoAccessorSetNeedsUpdate(
          that: this, needsUpdate: needsUpdate);

  set serverEvent(MapStringValue serverEvent) =>
      RustLib.instance.api.crateApiLuauEventDetailsAutoAccessorSetServerEvent(
          that: this, serverEvent: serverEvent);

  set source(int source) =>
      RustLib.instance.api.crateApiLuauEventDetailsAutoAccessorSetSource(
          that: this, source: source);

  set target(int target) =>
      RustLib.instance.api.crateApiLuauEventDetailsAutoAccessorSetTarget(
          that: this, target: target);

  Future<void> cancel() => RustLib.instance.api.crateApiLuauEventDetailsCancel(
        that: this,
      );
}

@sealed
class LuauEventRunnerImpl extends RustOpaque implements LuauEventRunner {
  // Not to be used by end users
  LuauEventRunnerImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  LuauEventRunnerImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_LuauEventRunner,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_LuauEventRunner,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_LuauEventRunnerPtr,
  );

  Future<EventDetails> runEvent(
          {required String eventType,
          required String event,
          required String serverEvent,
          required int target}) =>
      RustLib.instance.api
          .crateApiLuauLifetimeableAutoOwnedRustOpaqueFlutterRustBridgeforGeneratedRustAutoOpaqueInnerLuauEventRunnerstaticRunEvent(
              that: this,
              eventType: eventType,
              event: event,
              serverEvent: serverEvent,
              target: target);

  Future<void> runJoin({required String name}) => RustLib.instance.api
      .crateApiLuauLifetimeableAutoOwnedRustOpaqueFlutterRustBridgeforGeneratedRustAutoOpaqueInnerLuauEventRunnerstaticRunJoin(
          that: this, name: name);
}

@sealed
class LuauEventSystemImpl extends RustOpaque implements LuauEventSystem {
  // Not to be used by end users
  LuauEventSystemImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  LuauEventSystemImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_LuauEventSystem,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_LuauEventSystem,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_LuauEventSystemPtr,
  );
}

@sealed
class LuauPluginImpl extends RustOpaque implements LuauPlugin {
  // Not to be used by end users
  LuauPluginImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  LuauPluginImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_LuauPlugin,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_LuauPlugin,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_LuauPluginPtr,
  );

  LuauEventRunner eventSystem() =>
      RustLib.instance.api.crateApiLuauLuauPluginEventSystem(
        that: this,
      );

  Future<void> run() => RustLib.instance.api.crateApiLuauLuauPluginRun(
        that: this,
      );
}

@sealed
class MapStringValueImpl extends RustOpaque implements MapStringValue {
  // Not to be used by end users
  MapStringValueImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  MapStringValueImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_MapStringValue,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_MapStringValue,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_MapStringValuePtr,
  );
}

@sealed
class PluginCallbackImpl extends RustOpaque implements PluginCallback {
  // Not to be used by end users
  PluginCallbackImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  PluginCallbackImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_PluginCallback,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_PluginCallback,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_PluginCallbackPtr,
  );

  Future<void> changeOnPrint(
          {required FutureOr<void> Function(String) onPrint}) =>
      RustLib.instance.api.crateApiLuauPluginCallbackChangeOnPrint(
          that: this, onPrint: onPrint);
}
